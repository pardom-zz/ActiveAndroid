language: java
jdk: oraclejdk7
env: ANDROID_SDK=android-16 ANDROID_ABI=armeabi-v7a

before_install:
  # Install ia32-libs (necessary for Android SDK to run on 64-bit linux)
  # - sudo apt-get clean && sudo apt-get update
  - sudo apt-get update -qq
  - sudo apt-get install -qq --force-yes libgd2-xpm ia32-libs ia32-libs-multiarch

  # Install Android SDK
  - wget http://dl.google.com/android/android-sdk_r23.0.2-linux.tgz
  - tar -zxf android-sdk_r23.0.2-linux.tgz
  - ls
  - export ANDROID_HOME=`pwd`/android-sdk-linux
  - export PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools

  # Install Maven 3.2.2
  - wget http://apache-mirror.rbc.ru/pub/apache/maven/maven-3/3.2.2/binaries/apache-maven-3.2.2-bin.tar.gz
  - tar -zxf apache-maven-3.2.2-bin.tar.gz
  - export PATH=${PATH}:`pwd`/apache-maven-3.2.2/bin

  # Install required Android components
  - android list sdk --extended --all
  
  # Install build environment

  - echo -ne "y\n" | android update sdk --filter platform-tools --no-ui --force

  
  - echo -ne "y\n" | android update sdk --filter $ANDROID_SDK --no-ui --force
  

  - echo -ne "y\n" | android update sdk --filter extra-android-support --no-ui --force

  - echo -ne "y\n" | android update sdk --no-ui --all --force --filter sys-img-armeabi-v7a-android-16

  # Create and start emulator
  - echo no | android create avd --force -n test -t $ANDROID_SDK --abi $ANDROID_ABI
  - android list avds
  - emulator -avd test -no-skin -no-audio -no-window &

before_script:
  # Make sure the emulator has started before running tests
  - chmod +x ./wait_for_emulator
  - ./wait_for_emulator

script:
  - mvn clean install -e
